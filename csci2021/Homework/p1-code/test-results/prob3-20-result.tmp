* (TEST 20) Stress Testing
COMMENTS:
Does a lot of adding to create a large tree, saves and loads it.
Similar to the provided data/big-script.txt. Will stress test the
implementation. 

** program: ./treemap_main -echo

** --- Failure messages --- 
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()

--- Valgrind Log from: test-results/raw/prob3-20-valgrd.tmp ---
==20123== Memcheck, a memory error detector
==20123== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20123== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==20123== Command: ./treemap_main -echo
==20123== Parent PID: 20122
==20123== 
==20123== error calling PR_SET_PTRACER, vgdb might block
==20123== 
==20123== HEAP SUMMARY:
==20123==     in use at exit: 472 bytes in 1 blocks
==20123==   total heap usage: 405 allocs, 404 frees, 66,880 bytes allocated
==20123== 
==20123== 472 bytes in 1 blocks are still reachable in loss record 1 of 1
==20123==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==20123==    by 0x48E56CD: __fopen_internal (iofopen.c:65)
==20123==    by 0x48E56CD: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==20123==    by 0x109E8C: treemap_load (treemap_funcs.c:257)
==20123==    by 0x1097AC: main (treemap_main.c:90)
==20123== 
==20123== LEAK SUMMARY:
==20123==    definitely lost: 0 bytes in 0 blocks
==20123==    indirectly lost: 0 bytes in 0 blocks
==20123==      possibly lost: 0 bytes in 0 blocks
==20123==    still reachable: 472 bytes in 1 blocks
==20123==         suppressed: 0 bytes in 0 blocks
==20123== 
==20123== For lists of detected and suppressed errors, rerun with: -s
==20123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

