==6569== Memcheck, a memory error detector
==6569== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6569== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==6569== Command: ./test_banlet_funcs2 load_font_2
==6569== Parent PID: 6568
==6569== 
==6569== error calling PR_SET_PTRACER, vgdb might block
==6569== Invalid read of size 4
==6569==    at 0x109A3D: print_fontified_oneline (banlet_funcs.c:98)
==6569==    by 0x109B36: print_fontified (banlet_funcs.c:142)
==6569==    by 0x10965D: main (test_banlet_funcs2.c:105)
==6569==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==6569== 
==6569== 
==6569== Process terminating with default action of signal 11 (SIGSEGV)
==6569==  Access not within mapped region at address 0x8
==6569==    at 0x109A3D: print_fontified_oneline (banlet_funcs.c:98)
==6569==    by 0x109B36: print_fontified (banlet_funcs.c:142)
==6569==    by 0x10965D: main (test_banlet_funcs2.c:105)
==6569==  If you believe this happened as a result of a stack
==6569==  overflow in your program's main thread (unlikely but
==6569==  possible), you can try to increase the size of the
==6569==  main thread stack using the --main-stacksize= flag.
==6569==  The main thread stack size used in this run was 8388608.
==6569== 
==6569== HEAP SUMMARY:
==6569==     in use at exit: 40 bytes in 1 blocks
==6569==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==6569== 
==6569== 40 bytes in 1 blocks are still reachable in loss record 1 of 1
==6569==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==6569==    by 0x109906: find_linebreaks (banlet_funcs.c:61)
==6569==    by 0x109A94: print_fontified (banlet_funcs.c:136)
==6569==    by 0x10965D: main (test_banlet_funcs2.c:105)
==6569== 
==6569== LEAK SUMMARY:
==6569==    definitely lost: 0 bytes in 0 blocks
==6569==    indirectly lost: 0 bytes in 0 blocks
==6569==      possibly lost: 0 bytes in 0 blocks
==6569==    still reachable: 40 bytes in 1 blocks
==6569==         suppressed: 0 bytes in 0 blocks
==6569== 
==6569== For lists of detected and suppressed errors, rerun with: -s
==6569== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
