* (TEST 13) set_display_from_batt() 0 V
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() 0 V"

** --- Failure messages --- 
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-13-expect.tmp
- Actual output in: test-results/raw/prob1-13-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                             ==== ACTUAL ====                                          
{                                                            {
    // Show 0.0 V                                                // Show 0.0 V
    BATT_VOLTAGE_PORT = -1;                                      BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                      BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                      BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                              batt_t batt = {
      .mlvolts = 0,                                                .mlvolts = 0,
      .percent = 0,                                                .percent = 0,
      .mode = 2,                                                   .mode = 2,
    };                                                           };
    int ret = set_display_from_batt(batt, dispint);              int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                     printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                           printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                  "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                            "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                 printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                       printf("Display based on dispint:\n");
    print_batt_display();                                        print_batt_display();
}                                                            }
---OUTPUT---                                                 ---OUTPUT---
ret: 0                                                       ret: 0
dispint bits       : 000 00000 0111111 0111111 0111111 110 | dispint bits       : 000 00000 0000000 0000000 0111111 110
index              :  29    24      17      10       3   0   index              :  29    24      17      10       3   0

BATT_VOLTAGE_PORT  : -1                                      BATT_VOLTAGE_PORT  : -1
BATT_STATUS_PORT   : 111 11111                               BATT_STATUS_PORT   : 111 11111
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111   BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0   index              :  29    24      17      10       3   0

Display based on dispint:                                    Display based on dispint:
+-^^^-+  ####   ####  ####                                 | +-^^^-+               ####     
|     |  #  #   #  #  #  #                                 | |     |               #  #     
|     |  #  #   #  #  #  #                                 | |     |               #  #     
|     |  #  #   #  #  #  #  V                              | |     |               #  #  V  
|     |  #  #   #  #  #  #                                 | |     |               #  #     
|     |  #  #   #  #  #  #                                 | |     |               #  #     
+-----+  #### o ####  ####                                 | +-----+       o       ####     
#+END_SRC

** --- Line Differences ---
EXPECT:  23) dispint bits       : 000 00000 0111111 0111111 0111111 110
ACTUAL:  23) dispint bits       : 000 00000 0000000 0000000 0111111 110
EXPECT:  32) +-^^^-+  ####   ####  ####     
EXPECT:  33) |     |  #  #   #  #  #  #     
EXPECT:  34) |     |  #  #   #  #  #  #     
EXPECT:  35) |     |  #  #   #  #  #  #  V  
EXPECT:  36) |     |  #  #   #  #  #  #     
EXPECT:  37) |     |  #  #   #  #  #  #     
EXPECT:  38) +-----+  #### o ####  ####     
ACTUAL:  32) +-^^^-+               ####     
ACTUAL:  33) |     |               #  #     
ACTUAL:  34) |     |               #  #     
ACTUAL:  35) |     |               #  #  V  
ACTUAL:  36) |     |               #  #     
ACTUAL:  37) |     |               #  #     
ACTUAL:  38) +-----+       o       ####     

--- Valgrind Log from: test-results/raw/prob1-13-valgrd.tmp ---
==27802== Memcheck, a memory error detector
==27802== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27802== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==27802== Command: ./test_batt_update set_display_from_batt()\ 0\ V
==27802== Parent PID: 27801
==27802== 
==27802== error calling PR_SET_PTRACER, vgdb might block
==27802== 
==27802== HEAP SUMMARY:
==27802==     in use at exit: 0 bytes in 0 blocks
==27802==   total heap usage: 1 allocs, 1 frees, 4 bytes allocated
==27802== 
==27802== All heap blocks were freed -- no leaks are possible
==27802== 
==27802== For lists of detected and suppressed errors, rerun with: -s
==27802== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

