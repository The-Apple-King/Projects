* (TEST 15) set_display_from_batt() 3.50 V
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() 3.50 V"

** --- Failure messages --- 
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-15-expect.tmp
- Actual output in: test-results/raw/prob1-15-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                                  ==== ACTUAL ====                                               
{                                                                 {
    // Set dispint from the given batt which is in Voltage mode       // Set dispint from the given batt which is in Voltage mode
    // and should result in a bit arrangement showing 3.50 V.         // and should result in a bit arrangement showing 3.50 V. 
    BATT_VOLTAGE_PORT = -1;                                           BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                           BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                           BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                                   batt_t batt = {
      .mlvolts = 3500,                                                  .mlvolts = 3500,
      .percent = 62,                                                    .percent = 62,
      .mode = 2,                                                        .mode = 2,
    };                                                                };
    int ret = set_display_from_batt(batt, dispint);                   int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                          printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                                printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                       "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                                 "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                      printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                     BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                            printf("Display based on dispint:\n");
    print_batt_display();                                             print_batt_display();
}                                                                 }
---OUTPUT---                                                      ---OUTPUT---
ret: 0                                                            ret: 0
dispint bits       : 000 00111 1001111 1101101 0111111 110      | dispint bits       : 000 00111 0000000 0000000 0111111 110
index              :  29    24      17      10       3   0        index              :  29    24      17      10       3   0

BATT_VOLTAGE_PORT  : -1                                           BATT_VOLTAGE_PORT  : -1
BATT_STATUS_PORT   : 111 11111                                    BATT_STATUS_PORT   : 111 11111
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111        BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0        index              :  29    24      17      10       3   0

Display based on dispint:                                         Display based on dispint:
+-^^^-+  ####   ####  ####                                      | +-^^^-+               ####     
|     |     #   #     #  #                                      | |     |               #  #     
|     |     #   #     #  #                                      | |     |               #  #     
|#####|  ####   ####  #  #  V                                   | |#####|               #  #  V  
|#####|     #      #  #  #                                      | |#####|               #  #     
|#####|     #      #  #  #                                      | |#####|               #  #     
+-----+  #### o ####  ####                                      | +-----+       o       ####     
#+END_SRC

** --- Line Differences ---
EXPECT:  24) dispint bits       : 000 00111 1001111 1101101 0111111 110
ACTUAL:  24) dispint bits       : 000 00111 0000000 0000000 0111111 110
EXPECT:  33) +-^^^-+  ####   ####  ####     
EXPECT:  34) |     |     #   #     #  #     
EXPECT:  35) |     |     #   #     #  #     
EXPECT:  36) |#####|  ####   ####  #  #  V  
EXPECT:  37) |#####|     #      #  #  #     
EXPECT:  38) |#####|     #      #  #  #     
EXPECT:  39) +-----+  #### o ####  ####     
ACTUAL:  33) +-^^^-+               ####     
ACTUAL:  34) |     |               #  #     
ACTUAL:  35) |     |               #  #     
ACTUAL:  36) |#####|               #  #  V  
ACTUAL:  37) |#####|               #  #     
ACTUAL:  38) |#####|               #  #     
ACTUAL:  39) +-----+       o       ####     

--- Valgrind Log from: test-results/raw/prob1-15-valgrd.tmp ---
==27868== Memcheck, a memory error detector
==27868== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27868== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==27868== Command: ./test_batt_update set_display_from_batt()\ 3.50\ V
==27868== Parent PID: 27867
==27868== 
==27868== error calling PR_SET_PTRACER, vgdb might block
==27868== 
==27868== HEAP SUMMARY:
==27868==     in use at exit: 0 bytes in 0 blocks
==27868==   total heap usage: 1 allocs, 1 frees, 4 bytes allocated
==27868== 
==27868== All heap blocks were freed -- no leaks are possible
==27868== 
==27868== For lists of detected and suppressed errors, rerun with: -s
==27868== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

