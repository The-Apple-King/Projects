* (TEST 22) set_display_from_batt() level 2
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() level 2"

** --- Failure messages --- 
- FAILURE(13): Valgrind detected errors
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-22-expect.tmp
- Actual output in: test-results/raw/prob1-22-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                             ==== ACTUAL ====                                          
{                                                            {
    // 30% level is first point at which 2 bars show             // 30% level is first point at which 2 bars show
    BATT_VOLTAGE_PORT = -1;                                      BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                      BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                      BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                              batt_t batt = {
      .mlvolts = 6480,                                             .mlvolts = 6480,
      .percent = 30,                                               .percent = 30,
      .mode = 1,                                                   .mode = 1,
    };                                                           };
    int ret = set_display_from_batt(batt, dispint);              int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                     printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                           printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                  "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                            "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                 printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                       printf("Display based on dispint:\n");
    print_batt_display();                                        print_batt_display();
}                                                            }
---OUTPUT---                                                 ---OUTPUT---
ret: 0                                                       ret: 0
dispint bits       : 000 00011 0000000 1001111 0111111 001 | dispint bits       : 000 00011 0000100 0000111 0111111 001
index              :  29    24      17      10       3   0   index              :  29    24      17      10       3   0

BATT_VOLTAGE_PORT  : -1                                      BATT_VOLTAGE_PORT  : -1
BATT_STATUS_PORT   : 111 11111                               BATT_STATUS_PORT   : 111 11111
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111   BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0   index              :  29    24      17      10       3   0

Display based on dispint:                                    Display based on dispint:
+-^^^-+         ####  ####                                   +-^^^-+         ####  ####     
|     |            #  #  #                                   |     |            #  #  #     
|     |            #  #  #                                   |     |            #  #  #     
|     |         ####  #  #                                 | |     |     #      #  #  #     
|#####|            #  #  #  %                              | |#####|     #      #  #  #  %  
|#####|            #  #  #                                 | |#####|     #      #  #  #     
+-----+         ####  ####                                 | +-----+     #      #  ####     
#+END_SRC

** --- Line Differences ---
EXPECT:  23) dispint bits       : 000 00011 0000000 1001111 0111111 001
ACTUAL:  23) dispint bits       : 000 00011 0000100 0000111 0111111 001
EXPECT:  35) |     |         ####  #  #     
EXPECT:  36) |#####|            #  #  #  %  
EXPECT:  37) |#####|            #  #  #     
EXPECT:  38) +-----+         ####  ####     
ACTUAL:  35) |     |     #      #  #  #     
ACTUAL:  36) |#####|     #      #  #  #  %  
ACTUAL:  37) |#####|     #      #  #  #     
ACTUAL:  38) +-----+     #      #  ####     

--- Valgrind Log from: test-results/raw/prob1-22-valgrd.tmp ---
==28099== Memcheck, a memory error detector
==28099== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28099== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==28099== Command: ./test_batt_update set_display_from_batt()\ level\ 2
==28099== Parent PID: 28098
==28099== 
==28099== error calling PR_SET_PTRACER, vgdb might block
==28099== Conditional jump or move depends on uninitialised value(s)
==28099==    at 0x10B9E9: bitstr (batt_sim.c:166)
==28099==    by 0x10ABC9: main (test_batt_update.c:426)
==28099==  Uninitialised value was created by a stack allocation
==28099==    at 0x10939F: main (test_batt_update.c:31)
==28099== 
==28099== Conditional jump or move depends on uninitialised value(s)
==28099==    at 0x10B822: set_batt_display (batt_sim.c:122)
==28099==    by 0x10B943: print_batt_display (batt_sim.c:140)
==28099==    by 0x10AC3D: main (test_batt_update.c:432)
==28099==  Uninitialised value was created by a stack allocation
==28099==    at 0x10939F: main (test_batt_update.c:31)
==28099== 
==28099== 
==28099== HEAP SUMMARY:
==28099==     in use at exit: 0 bytes in 0 blocks
==28099==   total heap usage: 1 allocs, 1 frees, 4 bytes allocated
==28099== 
==28099== All heap blocks were freed -- no leaks are possible
==28099== 
==28099== For lists of detected and suppressed errors, rerun with: -s
==28099== ERROR SUMMARY: 24 errors from 2 contexts (suppressed: 0 from 0)

