* (TEST 25) set_display_from_batt() level 5
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() level 5"

** --- Failure messages --- 
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-25-expect.tmp
- Actual output in: test-results/raw/prob1-25-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                                ==== ACTUAL ====                                             
{                                                               {
    // 90% is lowest percentage at which 5 bars will be shown       // 90% is lowest percentage at which 5 bars will be shown
    BATT_VOLTAGE_PORT = -1;                                         BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                         BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                         BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                                 batt_t batt = {
      .mlvolts = 7440,                                                .mlvolts = 7440,
      .percent = 90,                                                  .percent = 90,
      .mode = 1,                                                      .mode = 1,
    };                                                              };
    int ret = set_display_from_batt(batt, dispint);                 int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                        printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                              printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                     "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                               "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                    printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                   BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                          printf("Display based on dispint:\n");
    print_batt_display();                                           print_batt_display();
}                                                               }
---OUTPUT---                                                    ---OUTPUT---
ret: 0                                                          ret: 0
dispint bits       : 000 11111 0000000 1101111 0111111 001    | dispint bits       : 111 11111 1101110 1010100 0111111 001
index              :  29    24      17      10       3   0      index              :  29    24      17      10       3   0

BATT_VOLTAGE_PORT  : -1                                         BATT_VOLTAGE_PORT  : -1
BATT_STATUS_PORT   : 111 11111                                  BATT_STATUS_PORT   : 111 11111
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111      BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0      index              :  29    24      17      10       3   0

Display based on dispint:                                       Display based on dispint:
+-^^^-+         ####  ####                                    | +-^^^-+  #  #         ####     
|#####|         #  #  #  #                                      |#####|  #  #         #  #     
|#####|         #  #  #  #                                      |#####|  #  #         #  #     
|#####|         ####  #  #                                    | |#####|  ####   ####  #  #     
|#####|            #  #  #  %                                 | |#####|     #   #  #  #  #  %  
|#####|            #  #  #                                    | |#####|     #   #  #  #  #     
+-----+         ####  ####                                    | +-----+  ####   #  #  ####     
#+END_SRC

** --- Line Differences ---
EXPECT:  23) dispint bits       : 000 11111 0000000 1101111 0111111 001
ACTUAL:  23) dispint bits       : 111 11111 1101110 1010100 0111111 001
EXPECT:  32) +-^^^-+         ####  ####     
ACTUAL:  32) +-^^^-+  #  #         ####     
EXPECT:  35) |#####|         ####  #  #     
EXPECT:  36) |#####|            #  #  #  %  
EXPECT:  37) |#####|            #  #  #     
EXPECT:  38) +-----+         ####  ####     
ACTUAL:  35) |#####|  ####   ####  #  #     
ACTUAL:  36) |#####|     #   #  #  #  #  %  
ACTUAL:  37) |#####|     #   #  #  #  #     
ACTUAL:  38) +-----+  ####   #  #  ####     

--- Valgrind Log from: test-results/raw/prob1-25-valgrd.tmp ---
==28198== Memcheck, a memory error detector
==28198== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28198== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==28198== Command: ./test_batt_update set_display_from_batt()\ level\ 5
==28198== Parent PID: 28197
==28198== 
==28198== error calling PR_SET_PTRACER, vgdb might block
==28198== 
==28198== HEAP SUMMARY:
==28198==     in use at exit: 0 bytes in 0 blocks
==28198==   total heap usage: 1 allocs, 1 frees, 4 bytes allocated
==28198== 
==28198== All heap blocks were freed -- no leaks are possible
==28198== 
==28198== For lists of detected and suppressed errors, rerun with: -s
==28198== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

