* (TEST 20) set_display_from_batt() 100 %
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() 100 %"

** --- Failure messages --- 
- FAILURE(137) due to TIMEOUT: Runtime exceeded maximum of '5s'
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-20-expect.tmp
- Actual output in: test-results/raw/prob1-20-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                                         ==== ACTUAL ====                                                      
{                                                                        {
    // Show 100%, the only case in which the hundreds digit of percent       // Show 100%, the only case in which the hundreds digit of percent
    // is used.                                                              // is used.
    BATT_VOLTAGE_PORT = -1;                                                  BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                                  BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                                  BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                                          batt_t batt = {
      .mlvolts = 4217,                                                         .mlvolts = 4217,
      .percent = 100,                                                          .percent = 100,
      .mode = 1,                                                               .mode = 1,
    };                                                                       };
    int ret = set_display_from_batt(batt, dispint);                          int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                                 printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                                       printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                              "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                                        "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                             printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                            BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                                   printf("Display based on dispint:\n");
    print_batt_display();                                                    print_batt_display();
}                                                                        }
---OUTPUT---                                                             ---OUTPUT---
ret: 0                                                                 <
dispint bits       : 000 11111 0000110 0111111 0111111 001             <
index              :  29    24      17      10       3   0             <
                                                                       <
BATT_VOLTAGE_PORT  : -1                                                <
BATT_STATUS_PORT   : 111 11111                                         <
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111             <
index              :  29    24      17      10       3   0             <
                                                                       <
Display based on dispint:                                              <
+-^^^-+     #   ####  ####                                             <
|#####|     #   #  #  #  #                                             <
|#####|     #   #  #  #  #                                             <
|#####|     #   #  #  #  #                                             <
|#####|     #   #  #  #  #  %                                          <
|#####|     #   #  #  #  #                                             <
+-----+     #   ####  ####                                             <
#+END_SRC

** --- Line Differences ---
EXPECT:  23) ret: 0
EXPECT:  24) dispint bits       : 000 11111 0000110 0111111 0111111 001
EXPECT:  25) index              :  29    24      17      10       3   0
EXPECT:  26) 
EXPECT:  27) BATT_VOLTAGE_PORT  : -1
EXPECT:  28) BATT_STATUS_PORT   : 111 11111
EXPECT:  29) BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
EXPECT:  30) index              :  29    24      17      10       3   0
EXPECT:  31) 
EXPECT:  32) Display based on dispint:
EXPECT:  33) +-^^^-+     #   ####  ####     
EXPECT:  34) |#####|     #   #  #  #  #     
EXPECT:  35) |#####|     #   #  #  #  #     
EXPECT:  36) |#####|     #   #  #  #  #     
EXPECT:  37) |#####|     #   #  #  #  #  %  
EXPECT:  38) |#####|     #   #  #  #  #     
EXPECT:  39) +-----+     #   ####  ####     

--- Valgrind Log from: test-results/raw/prob1-20-valgrd.tmp ---
==14407== Memcheck, a memory error detector
==14407== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==14407== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==14407== Command: ./test_batt_update set_display_from_batt()\ 100\ %
==14407== Parent PID: 14406
==14407== 
==14407== error calling PR_SET_PTRACER, vgdb might block

