* (TEST 24) set_display_from_batt() level 4
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() level 4"

** --- Failure messages --- 
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-24-expect.tmp
- Actual output in: test-results/raw/prob1-24-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                                 ==== ACTUAL ====                                              
{                                                                {
    // 89% is highest percentage at which 4 bars will be shown       // 89% is highest percentage at which 4 bars will be shown
    BATT_VOLTAGE_PORT = -1;                                          BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                          BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                          BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                                  batt_t batt = {
      .mlvolts = 3713,                                                 .mlvolts = 3713,
      .percent = 89,                                                   .percent = 89,
      .mode = 2,                                                       .mode = 2,
    };                                                               };
    int ret = set_display_from_batt(batt, dispint);                  int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                         printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                               printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                      "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                                "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                     printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                    BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                           printf("Display based on dispint:\n");
    print_batt_display();                                            print_batt_display();
}                                                                }
---OUTPUT---                                                     ---OUTPUT---
ret: 0                                                         | Segmentation Fault
dispint bits       : 000 01111 1001111 0000111 0000110 110     <
index              :  29    24      17      10       3   0     <
                                                               <
BATT_VOLTAGE_PORT  : -1                                        <
BATT_STATUS_PORT   : 111 11111                                 <
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111     <
index              :  29    24      17      10       3   0     <
                                                               <
Display based on dispint:                                      <
+-^^^-+  ####   ####     #                                     <
|     |     #      #     #                                     <
|#####|     #      #     #                                     <
|#####|  ####      #     #  V                                  <
|#####|     #      #     #                                     <
|#####|     #      #     #                                     <
+-----+  #### o    #     #                                     <
#+END_SRC

** --- Line Differences ---
EXPECT:  22) ret: 0
EXPECT:  23) dispint bits       : 000 01111 1001111 0000111 0000110 110
EXPECT:  24) index              :  29    24      17      10       3   0
EXPECT:  25) 
EXPECT:  26) BATT_VOLTAGE_PORT  : -1
EXPECT:  27) BATT_STATUS_PORT   : 111 11111
EXPECT:  28) BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
EXPECT:  29) index              :  29    24      17      10       3   0
EXPECT:  30) 
EXPECT:  31) Display based on dispint:
EXPECT:  32) +-^^^-+  ####   ####     #     
EXPECT:  33) |     |     #      #     #     
EXPECT:  34) |#####|     #      #     #     
EXPECT:  35) |#####|  ####      #     #  V  
EXPECT:  36) |#####|     #      #     #     
EXPECT:  37) |#####|     #      #     #     
EXPECT:  38) +-----+  #### o    #     #     
ACTUAL:  22) Segmentation Fault

--- Valgrind Log from: test-results/raw/prob1-24-valgrd.tmp ---
==25885== Memcheck, a memory error detector
==25885== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==25885== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==25885== Command: ./test_batt_update set_display_from_batt()\ level\ 4
==25885== Parent PID: 25884
==25885== 
==25885== error calling PR_SET_PTRACER, vgdb might block
==25885== 
==25885== Process terminating with default action of signal 8 (SIGFPE)
==25885==  Integer divide by zero at address 0x1008E01C87
==25885==    at 0x10B9F2: ??? (batt_update_asm.s:166)
==25885==    by 0x488FD8F: (below main) (libc_start_call_main.h:58)
==25885== 
==25885== HEAP SUMMARY:
==25885==     in use at exit: 8 bytes in 2 blocks
==25885==   total heap usage: 2 allocs, 0 frees, 8 bytes allocated
==25885== 
==25885== 4 bytes in 1 blocks are still reachable in loss record 1 of 2
==25885==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==25885==    by 0x109373: main (test_batt_update.c:39)
==25885== 
==25885== 4 bytes in 1 blocks are still reachable in loss record 2 of 2
==25885==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==25885==    by 0x109384: main (test_batt_update.c:40)
==25885== 
==25885== LEAK SUMMARY:
==25885==    definitely lost: 0 bytes in 0 blocks
==25885==    indirectly lost: 0 bytes in 0 blocks
==25885==      possibly lost: 0 bytes in 0 blocks
==25885==    still reachable: 8 bytes in 2 blocks
==25885==         suppressed: 0 bytes in 0 blocks
==25885== 
==25885== For lists of detected and suppressed errors, rerun with: -s
==25885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

